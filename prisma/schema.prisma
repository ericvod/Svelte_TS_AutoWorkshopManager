// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cliente {
  id            Int       @id @default(autoincrement())
  nome          String
  cpf           String    @unique
  endereco      String?
  telefone      String
  email         String?
  data_registro DateTime  @default(now())
  veiculos      Veiculo[]
}

model Veiculo {
  placa           String            @id
  chassi          String?
  marca           String?
  modelo          String?
  ano             Int?
  cor             String?
  cliente_id      Int
  cliente         Cliente           @relation(fields: [cliente_id], references: [id])
  ordensDeServico OrdensDeServico[]
}

model OrdensDeServico {
  id                 Int                       @id @default(autoincrement())
  veiculo_placa      String
  veiculo            Veiculo                   @relation(fields: [veiculo_placa], references: [placa])
  data_abertura      DateTime                  @default(now())
  data_fechamento    DateTime?
  status             String
  descricao_problema String?
  descricao_servico  String?
  itens              ItensOrdemServico[]
  funcionarios       OrdemServicoFuncionario[]
}

model ItensOrdemServico {
  id               Int             @id @default(autoincrement())
  ordem_servico_id Int
  ordemServico     OrdensDeServico @relation(fields: [ordem_servico_id], references: [id])
  servico_id       Int
  servico          Servico         @relation(fields: [servico_id], references: [id])
  preco_total      Float
}

model Servico {
  id        Int                 @id @default(autoincrement())
  nome      String
  descricao String
  preco     Float
  itens     ItensOrdemServico[]
}

model Funcionario {
  id               Int                       @id @default(autoincrement())
  nome             String
  cpf              String                    @unique
  telefone         String?
  email            String?
  cargo            String?
  data_contratacao DateTime                  @default(now())
  ordensDeServico  OrdemServicoFuncionario[]
}

model OrdemServicoFuncionario {
  id               Int             @id @default(autoincrement())
  ordem_servico_id Int
  funcionario_id   Int
  ordemServico     OrdensDeServico @relation(fields: [ordem_servico_id], references: [id])
  funcionario      Funcionario     @relation(fields: [funcionario_id], references: [id])
}

model Estoque {
  id         Int      @id @default(autoincrement())
  nome       String
  descricao  String?
  quantidade Int
  preco      Float
  compras    Compra[]
}

model Compra {
  id          Int      @id @default(autoincrement())
  estoque_id  Int
  estoque     Estoque  @relation(fields: [estoque_id], references: [id])
  data_compra DateTime @default(now())
  quantidade  Int
  preco_total Float
}
